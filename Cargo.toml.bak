[package]
name = "saorsa-core"
version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true
description = "Saorsa - Core P2P networking library with DHT, QUIC transport, three-word addresses, and MCP integration"
keywords = ["p2p", "networking", "dht", "quic", "decentralized"]
categories = ["network-programming", "asynchronous", "cryptography"]
readme = "../../README.md"
documentation = "https://docs.rs/saorsa-core"
include = [
    "src/**/*",
    "Cargo.toml",
    "../../README.md",
    "../../LICENSE-AGPL-3.0",
    "../../LICENSE-COMMERCIAL",
]

[lints]
workspace = true

[dependencies]
# Workspace dependencies
tokio.workspace = true
futures.workspace = true
async-trait.workspace = true
serde.workspace = true
serde_json.workspace = true
serde-big-array.workspace = true
anyhow.workspace = true
thiserror.workspace = true
tracing.workspace = true
smallvec = { version = "1.13", features = ["serde"] }
uuid.workspace = true
ed25519-dalek.workspace = true
rand.workspace = true
rand_core.workspace = true
sha2.workspace = true
rand_chacha = "0.3"
x25519-dalek = "2.0"
bytes.workspace = true
hex.workspace = true
chrono.workspace = true
base64.workspace = true

# Performance optimization dependencies
parking_lot = "0.12"
flate2 = "1.0"

# Using ant-quic for advanced NAT traversal and PQC support (always enabled)
ant-quic = { version = "0.6" }
# Four-word networking for human-readable addresses
four-word-networking = { version = "2.3", optional = false }
rustls.workspace = true  # May still be needed for other TLS operations
log.workspace = true

# Core-specific dependencies
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
dirs = "5.0"
fastrand = "2.0"
reqwest = "0.11"
jsonwebtoken = "9.2"

# Identity system dependencies
aes-gcm.workspace = true
chacha20poly1305 = "0.10"
blake3 = "1.5"
once_cell = "1.19"
hkdf.workspace = true
argon2 = "0.5"
hmac = "0.12"
zeroize = { version = "1.7", features = ["derive"] }

# Git content addressing dependencies
bincode = "1.3"
lru = "0.12"

# DHT dependencies
reed-solomon-erasure = "6.0"

# Monitoring dependencies
prometheus = { version = "0.14", features = ["gen"] }

# Configuration dependencies
toml = "0.8"
regex = "1.10"
lazy_static = "1.4"

# Client dependencies
tokio-stream = "0.1"

# Health check dependencies
axum = "0.7"
tower = { version = "0.4", features = ["util"] }
num_cpus = "1.16"

# Post-quantum cryptography (temporarily disabled)
# ml-kem.workspace = true
# ml-dsa.workspace = true
# frost-ed25519.workspace = true
# shamir.workspace = true
# vsss-rs.workspace = true

# Optional CLI dependencies
clap = { version = "4.4", features = ["derive"], optional = true }
warp = { version = "0.3", optional = true }
mime_guess = { version = "2.0", optional = true }
include_dir = { version = "0.7", optional = true }

[dev-dependencies]
tempfile = "3.10"
pretty_assertions = "1.4"
serial_test = "3.1"
criterion = { version = "0.4", features = ["html_reports"] }
clap = { version = "4.4", features = ["derive"] }
proptest = "1.4"
quickcheck = "1.0"
quickcheck_macros = "1.0"
approx = "0.5"

[features]
default = ["dht", "mcp", "ant-quic", "four-word-addresses"]
# Feature flags for different capabilities
dht = []
mcp = []
four-word-addresses = []
ant-quic = []
quantum-resistant = []
threshold = []
cli = ["clap", "warp", "mime_guess", "include_dir"]
metrics = []
# Commercial license features
commercial = []
agpl-compliance = []

[[bench]]
name = "dht_benchmark"
harness = false

[[bench]]
name = "security_benchmark"
harness = false

[[bench]]
name = "production_benchmark"
harness = false

[[bench]]
name = "multi_armed_bandit_bench"
harness = false

[[bench]]
name = "q_learning_cache_bench"
harness = false

[[bench]]
name = "eviction_bench"
harness = false

[[bench]]
name = "eigentrust_bench"
harness = false

[[bench]]
name = "validation_bench"
harness = false

[[bench]]
name = "gossipsub_bench"
harness = false

[[test]]
name = "eigentrust_integration_test"
path = "tests/eigentrust_integration_test.rs"

[[test]]
name = "gossipsub_integration_test"
path = "tests/gossipsub_integration_test.rs"

# Platform-specific dependencies for secure memory management
[target.'cfg(unix)'.dependencies]
libc = "0.2"

[target.'cfg(windows)'.dependencies]
winapi = { version = "0.3", features = ["memoryapi"] }

[[bench]]
name = "comprehensive_performance_test"
harness = false

[[bench]]
name = "load_testing_scenarios"
harness = false

[[bench]]
name = "performance_monitor"
harness = false
