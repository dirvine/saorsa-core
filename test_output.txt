[0m[1m[33mwarning[0m[0m[1m: type `HyperbolicGradient` is more private than the item `hyperbolic_greedy::HyperbolicCoordinate::update`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/adaptive/hyperbolic_greedy.rs:112:5[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m112[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    pub fn update(&mut self, gradient: &HyperbolicGradient, learning_rate: f64) {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[33mmethod `hyperbolic_greedy::HyperbolicCoordinate::update` is reachable at visibility `pub`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;10mnote[0m[0m: but type `HyperbolicGradient` is only usable at visibility `pub(self)`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/adaptive/hyperbolic_greedy.rs:133:1[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m133[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mstruct HyperbolicGradient {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m [0m[0m[1m[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(private_interfaces)]` on by default[0m

[0m[1m[33mwarning[0m[0m[1m: type `hyperbolic_greedy::RoutingMetrics` is more private than the item `HyperbolicGreedyRouter::get_metrics`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/adaptive/hyperbolic_greedy.rs:513:5[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m513[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    pub async fn get_metrics(&self) -> RoutingMetrics {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[33mmethod `HyperbolicGreedyRouter::get_metrics` is reachable at visibility `pub`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;10mnote[0m[0m: but type `hyperbolic_greedy::RoutingMetrics` is only usable at visibility `pub(self)`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/adaptive/hyperbolic_greedy.rs:234:1[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m234[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mstruct RoutingMetrics {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m [0m[0m[1m[38;5;10m^^^^^^^^^^^^^^^^^^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: field `k_value` is never read[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/dht/core_engine.rs:139:5[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m136[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mpub struct KademliaRoutingTable {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m            [0m[0m[1m[38;5;12m--------------------[0m[0m [0m[0m[1m[38;5;12mfield in this struct[0m
[0m[1m[38;5;12m...[0m
[0m[1m[38;5;12m139[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    k_value: usize,[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(dead_code)]` on by default[0m

[0m[1m[33mwarning[0m[0m[1m: fields `size` and `stored_at` are never read[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/dht/core_engine.rs:236:5[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m235[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mstruct DataMetadata {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m        [0m[0m[1m[38;5;12m------------[0m[0m [0m[0m[1m[38;5;12mfields in this struct[0m
[0m[1m[38;5;12m236[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    size: usize,[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^[0m
[0m[1m[38;5;12m237[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    stored_at: SystemTime,[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `DataMetadata` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis[0m

[0m[1m[33mwarning[0m[0m[1m: method `remove` is never used[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/dht/core_engine.rs:271:8[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m242[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mimpl DataStore {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m [0m[0m[1m[38;5;12m--------------[0m[0m [0m[0m[1m[38;5;12mmethod in this implementation[0m
[0m[1m[38;5;12m...[0m
[0m[1m[38;5;12m271[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    fn remove(&mut self, key: &DhtKey) -> Option<Vec<u8>> {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m        [0m[0m[1m[33m^^^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: fields `replication_factor`, `consistency_level`, and `pending_repairs` are never read[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/dht/core_engine.rs:279:5[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m278[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mstruct ReplicationManager {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m        [0m[0m[1m[38;5;12m------------------[0m[0m [0m[0m[1m[38;5;12mfields in this struct[0m
[0m[1m[38;5;12m279[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    replication_factor: usize,[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^[0m
[0m[1m[38;5;12m280[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    consistency_level: ConsistencyLevel,[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^^^^^^^^[0m
[0m[1m[38;5;12m281[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    pending_repairs: Vec<DhtKey>,[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^^^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: methods `required_replicas` and `schedule_repair` are never used[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/dht/core_engine.rs:293:8[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m284[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mimpl ReplicationManager {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m [0m[0m[1m[38;5;12m-----------------------[0m[0m [0m[0m[1m[38;5;12mmethods in this implementation[0m
[0m[1m[38;5;12m...[0m
[0m[1m[38;5;12m293[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    fn required_replicas(&self) -> usize {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m        [0m[0m[1m[33m^^^^^^^^^^^^^^^^^[0m
[0m[1m[38;5;12m...[0m
[0m[1m[38;5;12m301[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    fn schedule_repair(&mut self, key: DhtKey) {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m        [0m[0m[1m[33m^^^^^^^^^^^^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: field `rebalance_threshold` is never read[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/dht/core_engine.rs:311:5[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m309[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mstruct LoadBalancer {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m        [0m[0m[1m[38;5;12m------------[0m[0m [0m[0m[1m[38;5;12mfield in this struct[0m
[0m[1m[38;5;12m310[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    node_loads: HashMap<NodeId, LoadMetric>,[0m
[0m[1m[38;5;12m311[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    rebalance_threshold: f64,[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: methods `update_load` and `should_rebalance` are never used[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/dht/core_engine.rs:322:8[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m314[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mimpl LoadBalancer {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m [0m[0m[1m[38;5;12m-----------------[0m[0m [0m[0m[1m[38;5;12mmethods in this implementation[0m
[0m[1m[38;5;12m...[0m
[0m[1m[38;5;12m322[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    fn update_load(&mut self, node_id: NodeId, load: LoadMetric) {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m        [0m[0m[1m[33m^^^^^^^^^^^[0m
[0m[1m[38;5;12m...[0m
[0m[1m[38;5;12m345[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    fn should_rebalance(&self) -> bool {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m        [0m[0m[1m[33m^^^^^^^^^^^^^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: field `reed_solomon` is never read[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/dht/core_engine.rs:360:5[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m353[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mpub struct DhtCoreEngine {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m            [0m[0m[1m[38;5;12m-------------[0m[0m [0m[0m[1m[38;5;12mfield in this struct[0m
[0m[1m[38;5;12m...[0m
[0m[1m[38;5;12m360[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    reed_solomon: Arc<ReedSolomonEncoder>,[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: field `alpha` is never read[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/dht/trust_weighted_kademlia.rs:84:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m65[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mpub struct TrustWeightedKademlia {[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m            [0m[0m[1m[38;5;12m---------------------[0m[0m [0m[0m[1m[38;5;12mfield in this struct[0m
[0m[1m[38;5;12m...[0m
[0m[1m[38;5;12m84[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    alpha: usize, // parallelism factor[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: field `max_size` is never read[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/dht/trust_weighted_kademlia.rs:91:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m89[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mstruct KBucket {[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m        [0m[0m[1m[38;5;12m-------[0m[0m [0m[0m[1m[38;5;12mfield in this struct[0m
[0m[1m[38;5;12m90[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    contacts: Vec<Contact>,[0m
[0m[1m[38;5;12m91[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    max_size: usize,[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `KBucket` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis[0m

[0m[1m[33mwarning[0m[0m[1m: methods `add_contact` and `get_contacts` are never used[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/dht/trust_weighted_kademlia.rs:103:8[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m94[0m[0m  [0m[0m[1m[38;5;12m|[0m[0m [0m[0mimpl KBucket {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m [0m[0m[1m[38;5;12m------------[0m[0m [0m[0m[1m[38;5;12mmethods in this implementation[0m
[0m[1m[38;5;12m...[0m
[0m[1m[38;5;12m103[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    fn add_contact(&mut self, contact: Contact) {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m        [0m[0m[1m[33m^^^^^^^^^^^[0m
[0m[1m[38;5;12m...[0m
[0m[1m[38;5;12m123[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    fn get_contacts(&self, count: usize) -> Vec<Contact> {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m        [0m[0m[1m[33m^^^^^^^^^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: method `update_routing_table` is never used[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/dht/trust_weighted_kademlia.rs:276:14[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m128[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mimpl TrustWeightedKademlia {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m [0m[0m[1m[38;5;12m--------------------------[0m[0m [0m[0m[1m[38;5;12mmethod in this implementation[0m
[0m[1m[38;5;12m...[0m
[0m[1m[38;5;12m276[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    async fn update_routing_table(&self, contact: Contact) {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m              [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: method `bucket_index` is never used[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/dht/trust_weighted_kademlia.rs:286:8[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m285[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mimpl TrustWeightedKademlia {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m [0m[0m[1m[38;5;12m--------------------------[0m[0m [0m[0m[1m[38;5;12mmethod in this implementation[0m
[0m[1m[38;5;12m286[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    fn bucket_index(&self, peer: &NodeId) -> usize {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m        [0m[0m[1m[33m^^^^^^^^^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: fields `size` and `created_at` are never read[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/dht/content_addressing.rs:203:5[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m202[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mstruct ChunkRef {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m        [0m[0m[1m[38;5;12m--------[0m[0m [0m[0m[1m[38;5;12mfields in this struct[0m
[0m[1m[38;5;12m203[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    size: u32,[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^[0m
[0m[1m[38;5;12m204[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    created_at: SystemTime,[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `ChunkRef` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis[0m

[0m[1m[33mwarning[0m[0m[1m: constant `BATCH_WINDOW` is never used[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/dht/network_integration.rs:29:7[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m29[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mconst BATCH_WINDOW: Duration = Duration::from_millis(10);[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m       [0m[0m[1m[33m^^^^^^^^^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: field `node_id` is never read[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/dht/network_integration.rs:177:5[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m175[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mstruct ManagedConnection {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m        [0m[0m[1m[38;5;12m-----------------[0m[0m [0m[0m[1m[38;5;12mfield in this struct[0m
[0m[1m[38;5;12m176[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    connection: Box<dyn Connection>,[0m
[0m[1m[38;5;12m177[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    node_id: NodeId,[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: fields `batch_buffer` and `last_batch_time` are never read[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/dht/network_integration.rs:305:5[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m302[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mpub struct MessageRouter {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m            [0m[0m[1m[38;5;12m-------------[0m[0m [0m[0m[1m[38;5;12mfields in this struct[0m
[0m[1m[38;5;12m...[0m
[0m[1m[38;5;12m305[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    batch_buffer: Arc<Mutex<Vec<(NodeId, DhtMessage)>>>,[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^^^[0m
[0m[1m[38;5;12m306[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    last_batch_time: Arc<Mutex<Instant>>,[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^^^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: field `bootstrap_nodes` is never read[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/dht/network_integration.rs:374:5[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m372[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mpub struct PeerManager {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m            [0m[0m[1m[38;5;12m-----------[0m[0m [0m[0m[1m[38;5;12mfield in this struct[0m
[0m[1m[38;5;12m373[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    known_peers: Arc<RwLock<HashMap<NodeId, PeerInfo>>>,[0m
[0m[1m[38;5;12m374[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    bootstrap_nodes: Arc<RwLock<Vec<NodeInfo>>>,[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^^^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: fields `request_id_counter` and `pending_requests` are never read[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/dht/network_integration.rs:451:5[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m449[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mpub struct DhtProtocolHandler {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m            [0m[0m[1m[38;5;12m------------------[0m[0m [0m[0m[1m[38;5;12mfields in this struct[0m
[0m[1m[38;5;12m450[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    dht_engine: Arc<RwLock<DhtCoreEngine>>,[0m
[0m[1m[38;5;12m451[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    request_id_counter: Arc<Mutex<u64>>,[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^[0m
[0m[1m[38;5;12m452[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    pending_requests: Arc<RwLock<HashMap<u64, mpsc::Sender<DhtResponse>>>>,[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^^^^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: method `verify` is never used[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/dht/witness.rs:71:8[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m64[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mimpl MlKemSignature {[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m [0m[0m[1m[38;5;12m-------------------[0m[0m [0m[0m[1m[38;5;12mmethod in this implementation[0m
[0m[1m[38;5;12m...[0m
[0m[1m[38;5;12m71[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    fn verify(&self, _data: &[u8], _public_key: &MlKemPublicKey) -> bool {[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m        [0m[0m[1m[33m^^^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: field `data` is never read[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/dht/witness.rs:86:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m85[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mpub struct MlKemPrivateKey {[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m            [0m[0m[1m[38;5;12m---------------[0m[0m [0m[0m[1m[38;5;12mfield in this struct[0m
[0m[1m[38;5;12m86[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    data: Vec<u8>,[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `MlKemPrivateKey` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis[0m

[0m[1m[33mwarning[0m[0m[1m: method `get` is never used[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/dht/witness.rs:187:8[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m167[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mimpl ReceiptStorage {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m [0m[0m[1m[38;5;12m-------------------[0m[0m [0m[0m[1m[38;5;12mmethod in this implementation[0m
[0m[1m[38;5;12m...[0m
[0m[1m[38;5;12m187[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    fn get(&self, operation_id: &OperationId) -> Option<&WitnessReceipt> {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m        [0m[0m[1m[33m^^^[0m

[0m[1m[33mwarning[0m[0m[1m: field `verification_keys` is never read[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/dht/witness.rs:202:5[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m200[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mpub struct WitnessReceiptSystem {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m            [0m[0m[1m[38;5;12m--------------------[0m[0m [0m[0m[1m[38;5;12mfield in this struct[0m
[0m[1m[38;5;12m201[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    signing_key: MlKemPrivateKey,[0m
[0m[1m[38;5;12m202[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    verification_keys: Arc<RwLock<HashMap<NodeId, MlKemPublicKey>>>,[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^^^^^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: field `routing_stats` is never read[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/adaptive/hyperbolic_enhanced.rs:91:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m77[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mpub struct EnhancedHyperbolicSpace {[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m            [0m[0m[1m[38;5;12m-----------------------[0m[0m [0m[0m[1m[38;5;12mfield in this struct[0m
[0m[1m[38;5;12m...[0m
[0m[1m[38;5;12m91[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    routing_stats: Arc<RwLock<RoutingStats>>,[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: field `local_id` is never read[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/adaptive/hyperbolic_greedy.rs:188:5[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m176[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mpub struct HyperbolicGreedyRouter {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m            [0m[0m[1m[38;5;12m----------------------[0m[0m [0m[0m[1m[38;5;12mfield in this struct[0m
[0m[1m[38;5;12m...[0m
[0m[1m[38;5;12m188[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    local_id: PeerId,[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: fields `total_stretch` and `stretch_count` are never read[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/adaptive/hyperbolic_greedy.rs:240:5[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m234[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mstruct RoutingMetrics {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m        [0m[0m[1m[38;5;12m--------------[0m[0m [0m[0m[1m[38;5;12mfields in this struct[0m
[0m[1m[38;5;12m...[0m
[0m[1m[38;5;12m240[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    total_stretch: f64,[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^^^^[0m
[0m[1m[38;5;12m241[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    /// Number of stretch measurements[0m
[0m[1m[38;5;12m242[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    stretch_count: usize,[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^^^^[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `RoutingMetrics` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis[0m

[1m[33mwarning[0m[1m:[0m `saorsa-core` (lib) generated 28 warnings
[1m[32m   Compiling[0m saorsa-core v0.3.10 (/Users/davidirvine/Desktop/Devel/projects/saorsa-core)
[0m[1m[33mwarning[0m[0m[1m: unused import: `Key`[0m
[0m [0m[0m[1m[38;5;12m--> [0m[0mtests/dht_core_operations_test.rs:9:35[0m
[0m  [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m9[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse saorsa_core::dht::{DHTConfig, Key, Record, optimized_storage::OptimizedDHTStorage};[0m
[0m  [0m[0m[1m[38;5;12m|[0m[0m                                   [0m[0m[1m[33m^^^[0m
[0m  [0m[0m[1m[38;5;12m|[0m
[0m  [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_imports)]` on by default[0m

[0m[1m[38;5;9merror[E0119][0m[0m[1m: conflicting implementations of trait `Default` for type `LegacyDHTStorage`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mexamples/dht_performance_demo.rs:20:1[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m13[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mimpl Default for LegacyDHTStorage {[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m [0m[0m[1m[38;5;12m---------------------------------[0m[0m [0m[0m[1m[38;5;12mfirst implementation here[0m
[0m[1m[38;5;12m...[0m
[0m[1m[38;5;12m20[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mimpl Default for LegacyDHTStorage {[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mconflicting implementation for `LegacyDHTStorage`[0m

[0m[1m[38;5;9merror[E0599][0m[0m[1m: no function or associated item named `new` found for array `[u8; 32]` in the current scope[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mexamples/dht_performance_demo.rs:73:24[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m73[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let key = Key::new(format!("test_key_{}", i).as_bytes());[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                        [0m[0m[1m[38;5;9m^^^[0m[0m [0m[0m[1m[38;5;9mfunction or associated item not found in `[u8; 32]`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;14mhelp[0m[0m: there is a method `ne` with a similar name[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m73[0m[0m [0m[0m[38;5;9m- [0m[0m        let key = Key::[0m[0m[38;5;9mnew[0m[0m(format!("test_key_{}", i).as_bytes());[0m
[0m[1m[38;5;12m73[0m[0m [0m[0m[38;5;10m+ [0m[0m        let key = Key::[0m[0m[38;5;10mne[0m[0m(format!("test_key_{}", i).as_bytes());[0m
[0m   [0m[0m[1m[38;5;12m|[0m

[0m[1m[38;5;9merror[E0308][0m[0m[1m: mismatched types[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mtests/dht_core_operations_test.rs:27:29[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m27[0m[0m  [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    Record::new(key, value, publisher)[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[38;5;12m-----------[0m[0m             [0m[0m[1m[38;5;9m^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mexpected `NodeId`, found `String`[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[38;5;12marguments to this function are incorrect[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;10mnote[0m[0m: associated function defined here[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0m/Users/davidirvine/Desktop/Devel/projects/saorsa-core/src/dht/mod.rs:100:12[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m100[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    pub fn new(key: Key, value: Vec<u8>, publisher: PeerId) -> Self {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m            [0m[0m[1m[38;5;10m^^^[0m

[0m[1m[33mwarning[0m[0m[1m: fields `network_latency` and `packet_loss_rate` are never read[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mtests/full_network_simulation.rs:30:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m28[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mstruct NetworkSimulation {[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m        [0m[0m[1m[38;5;12m-----------------[0m[0m [0m[0m[1m[38;5;12mfields in this struct[0m
[0m[1m[38;5;12m29[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    nodes: HashMap<NodeId, Arc<NetworkCoordinator>>,[0m
[0m[1m[38;5;12m30[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    network_latency: Duration,[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^^^^^^[0m
[0m[1m[38;5;12m31[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    packet_loss_rate: f64,[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^^^^^^^[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(dead_code)]` on by default[0m

[0m[1m[38;5;9merror[E0308][0m[0m[1m: mismatched types[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mexamples/dht_performance_demo.rs:76:46[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m76[0m[0m  [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let record = Record::new(key, value, publisher);[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                      [0m[0m[1m[38;5;12m-----------[0m[0m             [0m[0m[1m[38;5;9m^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mexpected `NodeId`, found `String`[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                      [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                      [0m[0m[1m[38;5;12marguments to this function are incorrect[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;10mnote[0m[0m: associated function defined here[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0m/Users/davidirvine/Desktop/Devel/projects/saorsa-core/src/dht/mod.rs:100:12[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m100[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    pub fn new(key: Key, value: Vec<u8>, publisher: PeerId) -> Self {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m            [0m[0m[1m[38;5;10m^^^[0m

[0m[1m[38;5;9merror[E0308][0m[0m[1m: mismatched types[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mtests/node_identity_test.rs:62:38[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m62[0m[0m  [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    assert!(identity.verify(message, &signature));[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                      [0m[0m[1m[38;5;12m------[0m[0m          [0m[0m[1m[38;5;9m^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mexpected `&MlDsaSignature`, found `&Result<MlDsaSignature, P2PError>`[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                      [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                      [0m[0m[1m[38;5;12marguments to this method are incorrect[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: expected reference `&saorsa_core::quantum_crypto::ant_quic_integration::MlDsaSignature`[0m
[0m               found reference `&[0m[0m[1m[35mResult<[0m[0msaorsa_core::quantum_crypto::ant_quic_integration::MlDsaSignature, [0m[0m[1m[35mP2PError>[0m[0m`[0m
[0m[1m[38;5;10mnote[0m[0m: method defined here[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0m/Users/davidirvine/Desktop/Devel/projects/saorsa-core/src/identity/node_identity.rs:311:12[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m311[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    pub fn verify(&self, message: &[u8], signature: &MlDsaSignature) -> Result<bool> {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m            [0m[0m[1m[38;5;10m^^^^^^[0m

[0m[1m[38;5;9merror[E0600][0m[0m[1m: cannot apply unary operator `!` to type `Result<bool, P2PError>`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mtests/node_identity_test.rs:62:5[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m62[0m[0m  [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    assert!(identity.verify(message, &signature));[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mcannot apply unary operator `!`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;10mnote[0m[0m: the foreign item type `Result<bool, P2PError>` doesn't implement `Not`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0m/Users/davidirvine/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:548:1[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m548[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mpub enum Result<T, E> {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m [0m[0m[1m[38;5;10m^^^^^^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;10mnot implement `Not`[0m

[0m[1m[38;5;9merror[E0599][0m[0m[1m: no function or associated item named `new` found for array `[u8; 32]` in the current scope[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mexamples/dht_performance_demo.rs:211:24[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m211[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let key = Key::new(format!("bound_test_{}", i).as_bytes());[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                        [0m[0m[1m[38;5;9m^^^[0m[0m [0m[0m[1m[38;5;9mfunction or associated item not found in `[u8; 32]`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;14mhelp[0m[0m: there is a method `ne` with a similar name[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m211[0m[0m [0m[0m[38;5;9m- [0m[0m        let key = Key::[0m[0m[38;5;9mnew[0m[0m(format!("bound_test_{}", i).as_bytes());[0m
[0m[1m[38;5;12m211[0m[0m [0m[0m[38;5;10m+ [0m[0m        let key = Key::[0m[0m[38;5;10mne[0m[0m(format!("bound_test_{}", i).as_bytes());[0m
[0m    [0m[0m[1m[38;5;12m|[0m

[0m[1m[38;5;9merror[E0308][0m[0m[1m: mismatched types[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mexamples/dht_performance_demo.rs:214:46[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m214[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let record = Record::new(key, value, publisher);[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                      [0m[0m[1m[38;5;12m-----------[0m[0m             [0m[0m[1m[38;5;9m^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mexpected `NodeId`, found `String`[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                      [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                      [0m[0m[1m[38;5;12marguments to this function are incorrect[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;10mnote[0m[0m: associated function defined here[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0m/Users/davidirvine/Desktop/Devel/projects/saorsa-core/src/dht/mod.rs:100:12[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m100[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    pub fn new(key: Key, value: Vec<u8>, publisher: PeerId) -> Self {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m            [0m[0m[1m[38;5;10m^^^[0m

[0m[1m[38;5;9merror[E0425][0m[0m[1m: cannot find value `exploitation_count` in this scope[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mtests/multi_armed_bandit_integration_test.rs:260:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m249[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    let mut _exploitation_count = 0;[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[38;5;12m-------------------[0m[0m [0m[0m[1m[38;5;12m`_exploitation_count` defined here[0m
[0m[1m[38;5;12m...[0m
[0m[1m[38;5;12m260[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m            exploitation_count += 1;[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^^^^[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;14mhelp[0m[0m: the leading underscore in `_exploitation_count` marks it as unused, consider renaming it to `exploitation_count`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m249[0m[0m [0m[0m[38;5;9m- [0m[0m    let mut [0m[0m[38;5;9m_exploitation_count[0m[0m = 0;[0m
[0m[1m[38;5;12m249[0m[0m [0m[0m[38;5;10m+ [0m[0m    let mut [0m[0m[38;5;10mexploitation_count[0m[0m = 0;[0m
[0m    [0m[0m[1m[38;5;12m|[0m

[0m[1m[38;5;9merror[E0308][0m[0m[1m: mismatched types[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mtests/node_identity_test.rs:65:48[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m65[0m[0m  [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    assert!(!identity.verify(b"Wrong message", &signature));[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                       [0m[0m[1m[38;5;12m------[0m[0m                   [0m[0m[1m[38;5;9m^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mexpected `&MlDsaSignature`, found `&Result<MlDsaSignature, P2PError>`[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                       [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                       [0m[0m[1m[38;5;12marguments to this method are incorrect[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: expected reference `&saorsa_core::quantum_crypto::ant_quic_integration::MlDsaSignature`[0m
[0m               found reference `&[0m[0m[1m[35mResult<[0m[0msaorsa_core::quantum_crypto::ant_quic_integration::MlDsaSignature, [0m[0m[1m[35mP2PError>[0m[0m`[0m
[0m[1m[38;5;10mnote[0m[0m: method defined here[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0m/Users/davidirvine/Desktop/Devel/projects/saorsa-core/src/identity/node_identity.rs:311:12[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m311[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    pub fn verify(&self, message: &[u8], signature: &MlDsaSignature) -> Result<bool> {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m            [0m[0m[1m[38;5;10m^^^^^^[0m

[0m[1m[38;5;9merror[E0600][0m[0m[1m: cannot apply unary operator `!` to type `Result<bool, P2PError>`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mtests/node_identity_test.rs:65:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m65[0m[0m  [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    assert!(!identity.verify(b"Wrong message", &signature));[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mcannot apply unary operator `!`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;10mnote[0m[0m: the foreign item type `Result<bool, P2PError>` doesn't implement `Not`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0m/Users/davidirvine/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:548:1[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m548[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mpub enum Result<T, E> {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m [0m[0m[1m[38;5;10m^^^^^^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;10mnot implement `Not`[0m

[0m[1mSome errors have detailed explanations: E0119, E0308, E0599.[0m
[0m[1mFor more information about an error, try `rustc --explain E0119`.[0m
[0m[1m[38;5;9merror[E0308][0m[0m[1m: mismatched types[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mtests/dht_core_operations_test.rs:234:28[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m234[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        record.publisher = PeerId::from(publisher.to_string());[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m         [0m[0m[1m[38;5;12m----------------[0m[0m   [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mexpected `NodeId`, found `String`[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m         [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m         [0m[0m[1m[38;5;12mexpected due to the type of this binding[0m

[1m[31merror[0m[1m:[0m could not compile `saorsa-core` (example "dht_performance_demo") due to 5 previous errors
[1m[33mwarning[0m[1m:[0m build failed, waiting for other jobs to finish...
[0m[1m[38;5;9merror[E0308][0m[0m[1m: mismatched types[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mtests/dht_property_tests.rs:39:69[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m39[0m[0m  [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        .prop_map(|(key, value, publisher)| Record::new(key, value, publisher))[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                                             [0m[0m[1m[38;5;12m-----------[0m[0m             [0m[0m[1m[38;5;9m^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mexpected `NodeId`, found `String`[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                                             [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                                             [0m[0m[1m[38;5;12marguments to this function are incorrect[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;10mnote[0m[0m: associated function defined here[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0m/Users/davidirvine/Desktop/Devel/projects/saorsa-core/src/dht/mod.rs:100:12[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m100[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    pub fn new(key: Key, value: Vec<u8>, publisher: PeerId) -> Self {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m            [0m[0m[1m[38;5;10m^^^[0m

[0m[1m[38;5;9merror[E0599][0m[0m[1m: no method named `blocking_wait` found for opaque type `impl Future<Output = Result<bool, anyhow::Error>>` in the current scope[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mtests/chaos_engineering_tests.rs:609:50[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m609[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m            .filter(|node| node.is_operational().blocking_wait().unwrap_or(false))[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                                                  [0m[0m[1m[38;5;9m^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mmethod not found in `impl Future<Output = Result<bool, anyhow::Error>>`[0m

[0m[1m[38;5;9merror[E0308][0m[0m[1m: mismatched types[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mtests/node_identity_test.rs:85:34[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m85[0m[0m  [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    assert!(identity.verify(msg, &sig));[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                      [0m[0m[1m[38;5;12m------[0m[0m      [0m[0m[1m[38;5;9m^^^^[0m[0m [0m[0m[1m[38;5;9mexpected `&MlDsaSignature`, found `&Result<MlDsaSignature, P2PError>`[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                      [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                      [0m[0m[1m[38;5;12marguments to this method are incorrect[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: expected reference `&saorsa_core::quantum_crypto::ant_quic_integration::MlDsaSignature`[0m
[0m               found reference `&[0m[0m[1m[35mResult<[0m[0msaorsa_core::quantum_crypto::ant_quic_integration::MlDsaSignature, [0m[0m[1m[35mP2PError>[0m[0m`[0m
[0m[1m[38;5;10mnote[0m[0m: method defined here[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0m/Users/davidirvine/Desktop/Devel/projects/saorsa-core/src/identity/node_identity.rs:311:12[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m311[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    pub fn verify(&self, message: &[u8], signature: &MlDsaSignature) -> Result<bool> {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m            [0m[0m[1m[38;5;10m^^^^^^[0m

[0m[1m[38;5;9merror[E0600][0m[0m[1m: cannot apply unary operator `!` to type `Result<bool, P2PError>`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mtests/node_identity_test.rs:85:5[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m85[0m[0m  [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    assert!(identity.verify(msg, &sig));[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mcannot apply unary operator `!`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;10mnote[0m[0m: the foreign item type `Result<bool, P2PError>` doesn't implement `Not`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0m/Users/davidirvine/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:548:1[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m548[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mpub enum Result<T, E> {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m [0m[0m[1m[38;5;10m^^^^^^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;10mnot implement `Not`[0m

[0m[1m[38;5;9merror[E0433][0m[0m[1m: failed to resolve: use of undeclared type `ChurnPredictor`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mtests/adaptive_network_integration_test.rs:229:21[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m229[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    let predictor = ChurnPredictor::new();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                     [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9muse of undeclared type `ChurnPredictor`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;14mhelp[0m[0m: consider importing this struct[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m5[0m[0m   [0m[0m[38;5;10m+ use saorsa_core::adaptive::ChurnPredictor;[0m
[0m    [0m[0m[1m[38;5;12m|[0m

[0m[1m[38;5;9merror[E0433][0m[0m[1m: failed to resolve: use of undeclared type `AdaptiveStrategy`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mtests/adaptive_network_integration_test.rs:283:24[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m283[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    let mut eviction = AdaptiveStrategy::new(Arc::new(RwLock::new(HashMap::new())));[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                        [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9muse of undeclared type `AdaptiveStrategy`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;14mhelp[0m[0m: consider importing this struct[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m5[0m[0m   [0m[0m[38;5;10m+ use saorsa_core::adaptive::AdaptiveStrategy;[0m
[0m    [0m[0m[1m[38;5;12m|[0m

[0m[1m[38;5;9merror[E0433][0m[0m[1m: failed to resolve: use of undeclared type `SecurityManager`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mtests/adaptive_network_integration_test.rs:420:19[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m420[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    let monitor = SecurityManager::new([0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                   [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9muse of undeclared type `SecurityManager`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;14mhelp[0m[0m: consider importing this struct[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m5[0m[0m   [0m[0m[38;5;10m+ use saorsa_core::adaptive::SecurityManager;[0m
[0m    [0m[0m[1m[38;5;12m|[0m

[0m[1m[38;5;9merror[E0433][0m[0m[1m: failed to resolve: use of undeclared type `SecurityConfig`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mtests/adaptive_network_integration_test.rs:421:9[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m421[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        SecurityConfig::default(),[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m         [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9muse of undeclared type `SecurityConfig`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;14mhelp[0m[0m: consider importing one of these structs[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m5[0m[0m   [0m[0m[38;5;10m+ use saorsa_core::adaptive::SecurityConfig;[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m5[0m[0m   [0m[0m[38;5;10m+ use saorsa_core::config::SecurityConfig;[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m5[0m[0m   [0m[0m[38;5;10m+ use saorsa_core::network::SecurityConfig;[0m
[0m    [0m[0m[1m[38;5;12m|[0m

[0m[1m[38;5;9merror[E0433][0m[0m[1m: failed to resolve: use of undeclared type `AdaptiveStrategy`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mtests/adaptive_network_integration_test.rs:478:40[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m478[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    let eviction = Arc::new(Mutex::new(AdaptiveStrategy::new(Arc::new(RwLock::new([0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                                        [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9muse of undeclared type `AdaptiveStrategy`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;14mhelp[0m[0m: consider importing this struct[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m5[0m[0m   [0m[0m[38;5;10m+ use saorsa_core::adaptive::AdaptiveStrategy;[0m
[0m    [0m[0m[1m[38;5;12m|[0m

[0m[1mSome errors have detailed explanations: E0308, E0600.[0m
[0m[1mFor more information about an error, try `rustc --explain E0308`.[0m
[1m[31merror[0m[1m:[0m could not compile `saorsa-core` (test "node_identity_test") due to 6 previous errors
[0m[1m[38;5;9merror[E0599][0m[0m[1m: no method named `blocking_wait` found for opaque type `impl Future<Output = Result<bool, anyhow::Error>>` in the current scope[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mtests/chaos_engineering_tests.rs:338:46[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m338[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        .filter(|node| node.is_operational().blocking_wait().unwrap_or(false))[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                                              [0m[0m[1m[38;5;9m^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mmethod not found in `impl Future<Output = Result<bool, anyhow::Error>>`[0m

[0m[1m[38;5;9merror[E0308][0m[0m[1m: mismatched types[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mtests/dht_property_tests.rs:447:17[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m438[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m            let record = Record::new([0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                          [0m[0m[1m[38;5;12m-----------[0m[0m [0m[0m[1m[38;5;12marguments to this function are incorrect[0m
[0m[1m[38;5;12m...[0m
[0m[1m[38;5;12m447[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m                PeerId::from(format!("publisher_{}", i % 3)),[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                 [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mexpected `NodeId`, found `String`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;10mnote[0m[0m: associated function defined here[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0m/Users/davidirvine/Desktop/Devel/projects/saorsa-core/src/dht/mod.rs:100:12[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m100[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    pub fn new(key: Key, value: Vec<u8>, publisher: PeerId) -> Self {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m            [0m[0m[1m[38;5;10m^^^[0m

[0m[1mFor more information about this error, try `rustc --explain E0425`.[0m
[0m[1m[38;5;9merror[E0308][0m[0m[1m: mismatched types[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mtests/dht_property_tests.rs:470:17[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m461[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m            let record = Record::new([0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                          [0m[0m[1m[38;5;12m-----------[0m[0m [0m[0m[1m[38;5;12marguments to this function are incorrect[0m
[0m[1m[38;5;12m...[0m
[0m[1m[38;5;12m470[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m                PeerId::from(publisher.to_string()),[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                 [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mexpected `NodeId`, found `String`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;10mnote[0m[0m: associated function defined here[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0m/Users/davidirvine/Desktop/Devel/projects/saorsa-core/src/dht/mod.rs:100:12[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m100[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    pub fn new(key: Key, value: Vec<u8>, publisher: PeerId) -> Self {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m            [0m[0m[1m[38;5;10m^^^[0m

[0m[1m[38;5;9merror[E0308][0m[0m[1m: mismatched types[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mtests/dht_property_tests.rs:496:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m487[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let mut expired_record = Record::new([0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                                  [0m[0m[1m[38;5;12m-----------[0m[0m [0m[0m[1m[38;5;12marguments to this function are incorrect[0m
[0m[1m[38;5;12m...[0m
[0m[1m[38;5;12m496[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m            PeerId::from("expired_publisher".to_string()),[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mexpected `NodeId`, found `String`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;10mnote[0m[0m: associated function defined here[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0m/Users/davidirvine/Desktop/Devel/projects/saorsa-core/src/dht/mod.rs:100:12[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m100[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    pub fn new(key: Key, value: Vec<u8>, publisher: PeerId) -> Self {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m            [0m[0m[1m[38;5;10m^^^[0m

[1m[31merror[0m[1m:[0m could not compile `saorsa-core` (test "multi_armed_bandit_integration_test") due to 1 previous error
[0m[1m[38;5;9merror[E0507][0m[0m[1m: cannot move out of `self.id` which is behind a shared reference[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mtests/chaos_engineering_tests.rs:603:9[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m603[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        self.id[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m         [0m[0m[1m[38;5;9m^^^^^^^[0m[0m [0m[0m[1m[38;5;9mmove occurs because `self.id` has type `UserId`, which does not implement the `Copy` trait[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;14mhelp[0m[0m: consider cloning the value if the performance cost is acceptable[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m603[0m[0m [0m[0m[1m[38;5;12m| [0m[0m        self.id[0m[0m[38;5;10m.clone()[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                [0m[0m[38;5;10m++++++++[0m

[0m[1mSome errors have detailed explanations: E0507, E0599.[0m
[0m[1mFor more information about an error, try `rustc --explain E0507`.[0m
[1m[31merror[0m[1m:[0m could not compile `saorsa-core` (test "chaos_engineering_tests") due to 3 previous errors
[0m[1m[33mwarning[0m[0m[1m: unused variable: `node`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mtests/dht_core_operations_test.rs:793:24[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m793[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        for (node_idx, node) in nodes.iter().enumerate() {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                        [0m[0m[1m[33m^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_node`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_variables)]` on by default[0m

[0m[1mFor more information about this error, try `rustc --explain E0308`.[0m
[0m[1m[33mwarning[0m[0m[1m: unused variable: `q_cache`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mtests/adaptive_network_integration_test.rs:173:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m173[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    let mut q_cache = saorsa_core::adaptive::QLearningCacheManager::new(q_config, 1024);[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_q_cache`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_variables)]` on by default[0m

[0m[1m[33mwarning[0m[0m[1m: unused variable: `epoch`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mtests/adaptive_network_integration_test.rs:185:9[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m185[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    for epoch in 0..10 {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m         [0m[0m[1m[33m^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_epoch`[0m

[0m[1m[33mwarning[0m[0m[1m: unused variable: `i`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mtests/adaptive_network_integration_test.rs:186:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m186[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        for i in 0..30 {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_i`[0m

[0m[1m[33mwarning[0m[0m[1m: unused variable: `key`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mtests/adaptive_network_integration_test.rs:195:17[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m195[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m            let key = &keys[key_idx];[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                 [0m[0m[1m[33m^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_key`[0m

[0m[1m[33mwarning[0m[0m[1m: variable does not need to be mutable[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mtests/adaptive_network_integration_test.rs:173:9[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m173[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    let mut q_cache = saorsa_core::adaptive::QLearningCacheManager::new(q_config, 1024);[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m         [0m[0m[1m[38;5;12m----[0m[0m[1m[33m^^^^^^^[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m         [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m         [0m[0m[1m[38;5;12mhelp: remove this `mut`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_mut)]` on by default[0m

[1m[31merror[0m[1m:[0m could not compile `saorsa-core` (test "dht_property_tests") due to 4 previous errors
[0m[1m[33mwarning[0m[0m[1m: unused variable: `topic`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mtests/adaptive_network_integration_test.rs:379:9[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m379[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    for topic in &topics {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m         [0m[0m[1m[33m^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_topic`[0m

[0m[1m[33mwarning[0m[0m[1m: unused variable: `message`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mtests/adaptive_network_integration_test.rs:385:9[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m385[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    let message = b"test_message".to_vec();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m         [0m[0m[1m[33m^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_message`[0m

[1m[33mwarning[0m[1m:[0m `saorsa-core` (test "dht_core_operations_test") generated 2 warnings
[1m[31merror[0m[1m:[0m could not compile `saorsa-core` (test "dht_core_operations_test") due to 2 previous errors; 2 warnings emitted
[0m[1mFor more information about this error, try `rustc --explain E0433`.[0m
[1m[33mwarning[0m[1m:[0m `saorsa-core` (test "adaptive_network_integration_test") generated 7 warnings
[1m[31merror[0m[1m:[0m could not compile `saorsa-core` (test "adaptive_network_integration_test") due to 5 previous errors; 7 warnings emitted
[1m[33mwarning[0m[1m:[0m `saorsa-core` (test "full_network_simulation") generated 1 warning
